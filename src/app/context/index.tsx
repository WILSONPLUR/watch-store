"use client";
import React, { createContext, useState, ReactNode } from "react";
import { IMainContext, Message } from "../interfaces";

export const MainContext = createContext<IMainContext>({
  menuOpened: false,
  setMenuOpened: () => {},
  setMessages: () => {},
  setMessage: () => {},
  message: {
    content: "",
    by: "me",
    id: 1,
  },
  messages: [
    {
      content:
        "–í—ñ—Ç–∞—é! üëã –Ø –¥–æ–ø–æ–º–æ–∂—É –≤–∞–º –æ–±—Ä–∞—Ç–∏ —ñ–¥–µ–∞–ª—å–Ω–∏–π –≥–æ–¥–∏–Ω–Ω–∏–∫.–°–∫–∞–∂—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –¥–ª—è –∫–æ–≥–æ –≤–∏ —à—É–∫–∞—î—Ç–µ –≥–æ–¥–∏–Ω–Ω–∏–∫ ‚Äî –¥–ª—è —Å–µ–±–µ —á–∏ –Ω–∞ –ø–æ–¥–∞—Ä—É–Ω–æ–∫?",
      by: "ai",
      id: 1,
    },
    {
      content: "–î–ª—è —Å–µ–±–µ.",
      by: "me",
      id: 2,
    },
    {
      content:
        "–ß—É–¥–æ–≤–æ! üòä–ê –≤–∏ —à—É–∫–∞—î—Ç–µ –≥–æ–¥–∏–Ω–Ω–∏–∫ –±—ñ–ª—å—à–µ –¥–ª—è –ø–æ–≤—Å—è–∫–¥–µ–Ω–Ω–æ–≥–æ –Ω–æ—Å—ñ–Ω–Ω—è, –æ—Ñ—ñ—Ü—ñ–π–Ω–∏—Ö –ø–æ–¥—ñ–π —á–∏ —Å–ø–æ—Ä—Ç—É?",
      by: "ai",
      id: 3,
    },
    {
      content: "–î–ª—è –ø–æ–≤—Å—è–∫–¥–µ–Ω–Ω–æ–≥–æ, –∞–ª–µ —â–æ–± –≤–∏–≥–ª—è–¥–∞–≤ —Å—Ç–∏–ª—å–Ω–æ.",
      by: "me",
      id: 4,
    },
    {
      content:
        "–†–æ–∑—É–º—ñ—é –≤–∞—Å. –¢–æ–¥—ñ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –∑–≤–µ—Ä–Ω—É—Ç–∏ —É–≤–∞–≥—É –Ω–∞ –∫–ª–∞—Å–∏—á–Ω—ñ –∞–±–æ –º—ñ–Ω—ñ–º–∞–ª—ñ—Å—Ç–∏—á–Ω—ñ –º–æ–¥–µ–ª—ñ.–ü—ñ–¥–∫–∞–∂—ñ—Ç—å —â–µ, –≤–∞–º –≤–∞–∂–ª–∏–≤–æ, —â–æ–± –≥–æ–¥–∏–Ω–Ω–∏–∫ –±—É–≤ –º–µ—Ö–∞–Ω—ñ—á–Ω–∏–π —á–∏ –Ω–∞ –±–∞—Ç–∞—Ä–µ–π—Ü—ñ (–∫–≤–∞—Ä—Ü–æ–≤–∏–π)?",
      by: "ai",
      id: 5,
    },
    {
      content: "–ù–∞–ø–µ–≤–Ω–æ, –Ω–∞ –±–∞—Ç–∞—Ä–µ–π—Ü—ñ, —â–æ–± –Ω–µ –∑–∞–≤–æ–¥–∏—Ç–∏.",
      by: "me",
      id: 6,
    },
    {
      content:
        "–¢–æ–¥—ñ –∫–≤–∞—Ä—Ü–æ–≤–∏–π ‚Äî —á—É–¥–æ–≤–∏–π –≤–∏–±—ñ—Ä: —Ç–æ—á–Ω–∏–π, –Ω–µ –ø–æ—Ç—Ä–µ–±—É—î —â–æ–¥–µ–Ω–Ω–æ–≥–æ –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è. –©–µ –ø–∏—Ç–∞–Ω–Ω—è: –≤–∏ –Ω–∞–¥–∞—î—Ç–µ –ø–µ—Ä–µ–≤–∞–≥—É —à–∫—ñ—Ä—è–Ω–∏–º —Ä–µ–º—ñ–Ω—Ü—è–º, –º–µ—Ç–∞–ª–µ–≤–∏–º –±—Ä–∞—Å–ª–µ—Ç–∞–º —á–∏ –º–æ–∂–ª–∏–≤–æ —â–æ—Å—å –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–µ?",
      by: "ai",
      id: 7,
    },
  ],
});

export const MainContextProvider = ({ children }: { children: ReactNode }) => {
  const [menuOpened, setMenuOpened] = useState(false);
  const [messages, setMessages] = useState<Message[]>([
    {
      content:
        "–í—ñ—Ç–∞—é! üëã –Ø –¥–æ–ø–æ–º–æ–∂—É –≤–∞–º –æ–±—Ä–∞—Ç–∏ —ñ–¥–µ–∞–ª—å–Ω–∏–π –≥–æ–¥–∏–Ω–Ω–∏–∫.–°–∫–∞–∂—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –¥–ª—è –∫–æ–≥–æ –≤–∏ —à—É–∫–∞—î—Ç–µ –≥–æ–¥–∏–Ω–Ω–∏–∫ ‚Äî –¥–ª—è —Å–µ–±–µ —á–∏ –Ω–∞ –ø–æ–¥–∞—Ä—É–Ω–æ–∫?",
      by: "ai",
      id: 1,
    },
    {
      content: "–î–ª—è —Å–µ–±–µ.",
      by: "me",
      id: 2,
    },
    {
      content:
        "–ß—É–¥–æ–≤–æ! üòä–ê –≤–∏ —à—É–∫–∞—î—Ç–µ –≥–æ–¥–∏–Ω–Ω–∏–∫ –±—ñ–ª—å—à–µ –¥–ª—è –ø–æ–≤—Å—è–∫–¥–µ–Ω–Ω–æ–≥–æ –Ω–æ—Å—ñ–Ω–Ω—è, –æ—Ñ—ñ—Ü—ñ–π–Ω–∏—Ö –ø–æ–¥—ñ–π —á–∏ —Å–ø–æ—Ä—Ç—É?",
      by: "ai",
      id: 3,
    },
    {
      content: "–î–ª—è –ø–æ–≤—Å—è–∫–¥–µ–Ω–Ω–æ–≥–æ, –∞–ª–µ —â–æ–± –≤–∏–≥–ª—è–¥–∞–≤ —Å—Ç–∏–ª—å–Ω–æ.",
      by: "me",
      id: 4,
    },
    {
      content:
        "–†–æ–∑—É–º—ñ—é –≤–∞—Å. –¢–æ–¥—ñ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –∑–≤–µ—Ä–Ω—É—Ç–∏ —É–≤–∞–≥—É –Ω–∞ –∫–ª–∞—Å–∏—á–Ω—ñ –∞–±–æ –º—ñ–Ω—ñ–º–∞–ª—ñ—Å—Ç–∏—á–Ω—ñ –º–æ–¥–µ–ª—ñ.–ü—ñ–¥–∫–∞–∂—ñ—Ç—å —â–µ, –≤–∞–º –≤–∞–∂–ª–∏–≤–æ, —â–æ–± –≥–æ–¥–∏–Ω–Ω–∏–∫ –±—É–≤ –º–µ—Ö–∞–Ω—ñ—á–Ω–∏–π —á–∏ –Ω–∞ –±–∞—Ç–∞—Ä–µ–π—Ü—ñ (–∫–≤–∞—Ä—Ü–æ–≤–∏–π)?",
      by: "ai",
      id: 5,
    },
    {
      content: "–ù–∞–ø–µ–≤–Ω–æ, –Ω–∞ –±–∞—Ç–∞—Ä–µ–π—Ü—ñ, —â–æ–± –Ω–µ –∑–∞–≤–æ–¥–∏—Ç–∏.",
      by: "me",
      id: 6,
    },
    {
      content:
        "–¢–æ–¥—ñ –∫–≤–∞—Ä—Ü–æ–≤–∏–π ‚Äî —á—É–¥–æ–≤–∏–π –≤–∏–±—ñ—Ä: —Ç–æ—á–Ω–∏–π, –Ω–µ –ø–æ—Ç—Ä–µ–±—É—î —â–æ–¥–µ–Ω–Ω–æ–≥–æ –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è. –©–µ –ø–∏—Ç–∞–Ω–Ω—è: –≤–∏ –Ω–∞–¥–∞—î—Ç–µ –ø–µ—Ä–µ–≤–∞–≥—É —à–∫—ñ—Ä—è–Ω–∏–º —Ä–µ–º—ñ–Ω—Ü—è–º, –º–µ—Ç–∞–ª–µ–≤–∏–º –±—Ä–∞—Å–ª–µ—Ç–∞–º —á–∏ –º–æ–∂–ª–∏–≤–æ —â–æ—Å—å –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–µ?",
      by: "ai",
      id: 7,
    },
  ]);
  const [message, setMessage] = useState<Message>({
    content: "",
    by: "me",
    id: messages.length + 1,
  });
  const values = {
    menuOpened,
    setMenuOpened,
    messages,
    setMessages,
    message,
    setMessage,
  };

  return <MainContext.Provider value={values}>{children}</MainContext.Provider>;
};
